// ==============================================================
// RTL generated by Vitis HLS - High-Level Synthesis from C, C++ and OpenCL v2022.1 (64-bit)
// Version: 2022.1
// Copyright (C) Copyright 1986-2022 Xilinx, Inc. All Rights Reserved.
// 
// ===========================================================

`timescale 1 ns / 1 ps 

(* CORE_GENERATION_INFO="matrixmul_matrixmul,hls_ip_2022_1,{HLS_INPUT_TYPE=cxx,HLS_INPUT_FLOAT=0,HLS_INPUT_FIXED=0,HLS_INPUT_PART=xcu50-fsvh2104-2-e,HLS_INPUT_CLOCK=13.330000,HLS_INPUT_ARCH=pipeline,HLS_SYN_CLOCK=2.249000,HLS_SYN_LAT=10,HLS_SYN_TPT=5,HLS_SYN_MEM=0,HLS_SYN_DSP=0,HLS_SYN_FF=632,HLS_SYN_LUT=581,HLS_VERSION=2022_1}" *)

module matrixmul (
        ap_clk,
        ap_rst,
        ap_start,
        ap_done,
        ap_idle,
        ap_ready,
        a_address0,
        a_ce0,
        a_q0,
        a_address1,
        a_ce1,
        a_q1,
        b_0_address0,
        b_0_ce0,
        b_0_q0,
        b_0_address1,
        b_0_ce1,
        b_0_q1,
        b_1_address0,
        b_1_ce0,
        b_1_q0,
        b_1_address1,
        b_1_ce1,
        b_1_q1,
        b_2_address0,
        b_2_ce0,
        b_2_q0,
        b_2_address1,
        b_2_ce1,
        b_2_q1,
        res_address0,
        res_ce0,
        res_we0,
        res_d0,
        res_address1,
        res_ce1,
        res_we1,
        res_d1
);

parameter    ap_ST_fsm_pp0_stage0 = 5'd1;
parameter    ap_ST_fsm_pp0_stage1 = 5'd2;
parameter    ap_ST_fsm_pp0_stage2 = 5'd4;
parameter    ap_ST_fsm_pp0_stage3 = 5'd8;
parameter    ap_ST_fsm_pp0_stage4 = 5'd16;

input   ap_clk;
input   ap_rst;
input   ap_start;
output   ap_done;
output   ap_idle;
output   ap_ready;
output  [1:0] a_address0;
output   a_ce0;
input  [23:0] a_q0;
output  [1:0] a_address1;
output   a_ce1;
input  [23:0] a_q1;
output  [1:0] b_0_address0;
output   b_0_ce0;
input  [7:0] b_0_q0;
output  [1:0] b_0_address1;
output   b_0_ce1;
input  [7:0] b_0_q1;
output  [1:0] b_1_address0;
output   b_1_ce0;
input  [7:0] b_1_q0;
output  [1:0] b_1_address1;
output   b_1_ce1;
input  [7:0] b_1_q1;
output  [1:0] b_2_address0;
output   b_2_ce0;
input  [7:0] b_2_q0;
output  [1:0] b_2_address1;
output   b_2_ce1;
input  [7:0] b_2_q1;
output  [3:0] res_address0;
output   res_ce0;
output   res_we0;
output  [15:0] res_d0;
output  [3:0] res_address1;
output   res_ce1;
output   res_we1;
output  [15:0] res_d1;

reg ap_done;
reg ap_idle;
reg ap_ready;
reg[1:0] a_address0;
reg a_ce0;
reg a_ce1;
reg[1:0] b_0_address0;
reg b_0_ce0;
reg b_0_ce1;
reg[1:0] b_1_address0;
reg b_1_ce0;
reg b_1_ce1;
reg[1:0] b_2_address0;
reg b_2_ce0;
reg b_2_ce1;
reg[3:0] res_address0;
reg res_ce0;
reg res_we0;
reg[15:0] res_d0;
reg[3:0] res_address1;
reg res_ce1;
reg res_we1;
reg[15:0] res_d1;

(* fsm_encoding = "none" *) reg   [4:0] ap_CS_fsm;
wire    ap_CS_fsm_pp0_stage0;
reg    ap_enable_reg_pp0_iter0;
reg    ap_enable_reg_pp0_iter1;
reg    ap_enable_reg_pp0_iter2;
reg    ap_idle_pp0;
wire    ap_CS_fsm_pp0_stage4;
wire    ap_block_state5_pp0_stage4_iter0;
wire    ap_block_state10_pp0_stage4_iter1;
wire    ap_block_pp0_stage4_subdone;
wire    ap_block_state1_pp0_stage0_iter0;
wire    ap_block_state6_pp0_stage0_iter1;
wire    ap_block_state11_pp0_stage0_iter2;
wire    ap_block_pp0_stage0_11001;
wire  signed [15:0] sext_ln60_fu_314_p1;
reg  signed [15:0] sext_ln60_reg_610;
wire    ap_CS_fsm_pp0_stage1;
wire    ap_block_state2_pp0_stage1_iter0;
wire    ap_block_state7_pp0_stage1_iter1;
wire    ap_block_pp0_stage1_11001;
wire  signed [15:0] sext_ln60_1_fu_318_p1;
reg  signed [15:0] sext_ln60_1_reg_615;
wire   [15:0] mul_ln60_fu_322_p2;
reg  signed [15:0] mul_ln60_reg_621;
reg   [7:0] tmp1_reg_626;
reg  signed [7:0] b_1_load_reg_631;
wire  signed [15:0] sext_ln60_4_fu_348_p1;
reg  signed [15:0] sext_ln60_4_reg_636;
wire  signed [15:0] sext_ln60_5_fu_352_p1;
reg  signed [15:0] sext_ln60_5_reg_643;
wire  signed [15:0] sext_ln60_6_fu_356_p1;
reg  signed [15:0] sext_ln60_6_reg_650;
wire   [15:0] mul_ln60_3_fu_360_p2;
reg  signed [15:0] mul_ln60_3_reg_656;
reg  signed [7:0] b_1_load_1_reg_661;
wire  signed [15:0] sext_ln60_8_fu_366_p1;
reg  signed [15:0] sext_ln60_8_reg_666;
wire   [7:0] trunc_ln60_1_fu_370_p1;
reg  signed [7:0] trunc_ln60_1_reg_688;
reg   [7:0] tmp_1_reg_693;
wire  signed [15:0] sext_ln60_14_fu_374_p1;
reg  signed [15:0] sext_ln60_14_reg_698;
wire  signed [15:0] sext_ln60_9_fu_378_p1;
reg  signed [15:0] sext_ln60_9_reg_710;
wire    ap_CS_fsm_pp0_stage2;
wire    ap_block_state3_pp0_stage2_iter0;
wire    ap_block_state8_pp0_stage2_iter1;
wire    ap_block_pp0_stage2_11001;
wire   [15:0] mul_ln60_6_fu_382_p2;
reg  signed [15:0] mul_ln60_6_reg_716;
reg  signed [7:0] b_1_load_2_reg_721;
wire  signed [15:0] sext_ln60_11_fu_387_p1;
reg  signed [15:0] sext_ln60_11_reg_726;
wire  signed [15:0] sext_ln60_12_fu_391_p1;
reg  signed [15:0] sext_ln60_12_reg_733;
wire   [15:0] mul_ln60_9_fu_394_p2;
reg  signed [15:0] mul_ln60_9_reg_739;
wire   [7:0] trunc_ln60_2_fu_399_p1;
reg   [7:0] trunc_ln60_2_reg_744;
reg  signed [7:0] tmp_3_reg_749;
wire  signed [15:0] sext_ln60_17_fu_403_p1;
reg  signed [15:0] sext_ln60_17_reg_754;
wire  signed [15:0] sext_ln60_2_fu_407_p1;
wire    ap_CS_fsm_pp0_stage3;
wire    ap_block_state4_pp0_stage3_iter0;
wire    ap_block_state9_pp0_stage3_iter1;
wire    ap_block_pp0_stage3_11001;
wire  signed [15:0] sext_ln60_3_fu_410_p1;
reg  signed [15:0] sext_ln60_3_reg_768;
wire  signed [15:0] sext_ln60_7_fu_413_p1;
reg  signed [15:0] sext_ln60_7_reg_775;
wire  signed [15:0] sext_ln60_10_fu_416_p1;
reg  signed [15:0] sext_ln60_10_reg_782;
wire  signed [15:0] mul_ln60_12_fu_419_p2;
wire   [15:0] mul_ln60_15_fu_423_p2;
reg  signed [15:0] mul_ln60_15_reg_794;
wire  signed [15:0] grp_fu_450_p3;
reg   [15:0] add_ln60_reg_799;
wire    ap_block_pp0_stage4_11001;
wire  signed [15:0] grp_fu_457_p3;
reg   [15:0] add_ln60_2_reg_804;
wire  signed [15:0] sext_ln60_13_fu_427_p1;
wire  signed [15:0] grp_fu_464_p3;
reg   [15:0] add_ln60_6_reg_816;
wire  signed [15:0] grp_fu_471_p3;
reg   [15:0] add_ln60_8_reg_821;
wire  signed [15:0] sext_ln60_15_fu_430_p1;
reg  signed [15:0] sext_ln60_15_reg_826;
wire  signed [15:0] mul_ln60_18_fu_433_p2;
wire  signed [15:0] sext_ln60_16_fu_438_p1;
reg  signed [15:0] sext_ln60_16_reg_836;
wire  signed [15:0] mul_ln60_21_fu_441_p2;
wire   [15:0] grp_fu_479_p3;
wire  signed [15:0] grp_fu_485_p3;
reg   [15:0] add_ln60_10_reg_853;
wire  signed [15:0] grp_fu_491_p3;
reg   [15:0] add_ln60_12_reg_858;
wire  signed [15:0] grp_fu_498_p3;
reg   [15:0] add_ln60_14_reg_863;
wire  signed [15:0] mul_ln60_24_fu_446_p2;
wire   [15:0] grp_fu_521_p3;
reg  signed [15:0] add_ln60_5_reg_873;
wire  signed [15:0] grp_fu_529_p3;
reg   [15:0] add_ln60_16_reg_878;
wire   [15:0] grp_fu_542_p3;
reg  signed [15:0] add_ln60_9_reg_883;
wire   [15:0] grp_fu_548_p3;
reg  signed [15:0] add_ln60_11_reg_888;
wire   [15:0] grp_fu_554_p3;
reg  signed [15:0] add_ln60_13_reg_893;
wire   [15:0] grp_fu_560_p3;
reg  signed [15:0] add_ln60_15_reg_898;
wire   [15:0] grp_fu_565_p3;
reg  signed [15:0] add_ln60_17_reg_903;
reg    ap_enable_reg_pp0_iter0_reg;
wire    ap_block_pp0_stage0_subdone;
wire    ap_block_pp0_stage0;
wire    ap_block_pp0_stage1;
wire    ap_block_pp0_stage2;
wire    ap_block_pp0_stage3;
wire    ap_block_pp0_stage4;
wire   [15:0] grp_fu_505_p3;
wire   [15:0] grp_fu_513_p3;
wire   [15:0] grp_fu_535_p3;
wire   [7:0] trunc_ln60_fu_310_p1;
wire  signed [7:0] mul_ln60_fu_322_p1;
wire   [7:0] tmp_s_fu_338_p4;
wire  signed [7:0] mul_ln60_3_fu_360_p1;
wire   [7:0] grp_fu_300_p4;
wire  signed [7:0] mul_ln60_6_fu_382_p1;
wire  signed [7:0] mul_ln60_9_fu_394_p1;
wire  signed [7:0] mul_ln60_12_fu_419_p0;
wire  signed [7:0] mul_ln60_12_fu_419_p1;
wire  signed [7:0] mul_ln60_15_fu_423_p0;
wire  signed [7:0] mul_ln60_15_fu_423_p1;
wire  signed [7:0] mul_ln60_18_fu_433_p0;
wire  signed [7:0] mul_ln60_18_fu_433_p1;
wire  signed [7:0] mul_ln60_21_fu_441_p0;
wire  signed [7:0] mul_ln60_21_fu_441_p1;
wire  signed [7:0] mul_ln60_24_fu_446_p0;
wire  signed [7:0] mul_ln60_24_fu_446_p1;
wire  signed [7:0] grp_fu_450_p0;
wire  signed [7:0] grp_fu_450_p1;
wire  signed [7:0] grp_fu_457_p0;
wire  signed [7:0] grp_fu_457_p1;
wire  signed [7:0] grp_fu_464_p0;
wire  signed [7:0] grp_fu_464_p1;
wire  signed [7:0] grp_fu_471_p0;
wire  signed [7:0] grp_fu_471_p1;
wire  signed [7:0] grp_fu_479_p0;
wire  signed [7:0] grp_fu_479_p1;
wire  signed [7:0] grp_fu_485_p0;
wire  signed [7:0] grp_fu_485_p1;
wire  signed [7:0] grp_fu_491_p0;
wire  signed [7:0] grp_fu_491_p1;
wire  signed [7:0] grp_fu_498_p0;
wire  signed [7:0] grp_fu_498_p1;
wire  signed [7:0] grp_fu_505_p1;
wire  signed [7:0] grp_fu_513_p1;
wire  signed [7:0] grp_fu_521_p1;
wire  signed [7:0] grp_fu_529_p0;
wire  signed [7:0] grp_fu_529_p1;
wire  signed [7:0] grp_fu_535_p0;
wire  signed [7:0] grp_fu_535_p1;
wire  signed [7:0] grp_fu_542_p0;
wire  signed [7:0] grp_fu_542_p1;
wire  signed [7:0] grp_fu_548_p0;
wire  signed [7:0] grp_fu_548_p1;
wire  signed [7:0] grp_fu_554_p1;
wire  signed [7:0] grp_fu_560_p0;
wire  signed [7:0] grp_fu_560_p1;
wire  signed [7:0] grp_fu_565_p0;
wire  signed [7:0] grp_fu_565_p1;
reg   [4:0] ap_NS_fsm;
reg    ap_idle_pp0_0to1;
reg    ap_reset_idle_pp0;
reg    ap_idle_pp0_1to2;
wire    ap_block_pp0_stage1_subdone;
wire    ap_block_pp0_stage2_subdone;
wire    ap_block_pp0_stage3_subdone;
wire    ap_enable_pp0;
wire    ap_ce_reg;

// power-on initialization
initial begin
#0 ap_CS_fsm = 5'd1;
#0 ap_enable_reg_pp0_iter1 = 1'b0;
#0 ap_enable_reg_pp0_iter2 = 1'b0;
#0 ap_enable_reg_pp0_iter0_reg = 1'b0;
end

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U1(
    .din0(b_0_q1),
    .din1(mul_ln60_fu_322_p1),
    .dout(mul_ln60_fu_322_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U2(
    .din0(b_0_q0),
    .din1(mul_ln60_3_fu_360_p1),
    .dout(mul_ln60_3_fu_360_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U3(
    .din0(b_0_q0),
    .din1(mul_ln60_6_fu_382_p1),
    .dout(mul_ln60_6_fu_382_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U4(
    .din0(trunc_ln60_1_reg_688),
    .din1(mul_ln60_9_fu_394_p1),
    .dout(mul_ln60_9_fu_394_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U5(
    .din0(mul_ln60_12_fu_419_p0),
    .din1(mul_ln60_12_fu_419_p1),
    .dout(mul_ln60_12_fu_419_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U6(
    .din0(mul_ln60_15_fu_423_p0),
    .din1(mul_ln60_15_fu_423_p1),
    .dout(mul_ln60_15_fu_423_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U7(
    .din0(mul_ln60_18_fu_433_p0),
    .din1(mul_ln60_18_fu_433_p1),
    .dout(mul_ln60_18_fu_433_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U8(
    .din0(mul_ln60_21_fu_441_p0),
    .din1(mul_ln60_21_fu_441_p1),
    .dout(mul_ln60_21_fu_441_p2)
);

matrixmul_mul_8s_8s_16_1_1 #(
    .ID( 1 ),
    .NUM_STAGE( 1 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .dout_WIDTH( 16 ))
mul_8s_8s_16_1_1_U9(
    .din0(mul_ln60_24_fu_446_p0),
    .din1(mul_ln60_24_fu_446_p1),
    .dout(mul_ln60_24_fu_446_p2)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U10(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_450_p0),
    .din1(grp_fu_450_p1),
    .din2(mul_ln60_reg_621),
    .ce(1'b1),
    .dout(grp_fu_450_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U11(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_457_p0),
    .din1(grp_fu_457_p1),
    .din2(mul_ln60_3_reg_656),
    .ce(1'b1),
    .dout(grp_fu_457_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U12(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_464_p0),
    .din1(grp_fu_464_p1),
    .din2(mul_ln60_9_reg_739),
    .ce(1'b1),
    .dout(grp_fu_464_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U13(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_471_p0),
    .din1(grp_fu_471_p1),
    .din2(mul_ln60_12_fu_419_p2),
    .ce(1'b1),
    .dout(grp_fu_471_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U14(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_479_p0),
    .din1(grp_fu_479_p1),
    .din2(mul_ln60_6_reg_716),
    .ce(1'b1),
    .dout(grp_fu_479_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U15(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_485_p0),
    .din1(grp_fu_485_p1),
    .din2(mul_ln60_15_reg_794),
    .ce(1'b1),
    .dout(grp_fu_485_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U16(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_491_p0),
    .din1(grp_fu_491_p1),
    .din2(mul_ln60_18_fu_433_p2),
    .ce(1'b1),
    .dout(grp_fu_491_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U17(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_498_p0),
    .din1(grp_fu_498_p1),
    .din2(mul_ln60_21_fu_441_p2),
    .ce(1'b1),
    .dout(grp_fu_498_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U18(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_1_load_reg_631),
    .din1(grp_fu_505_p1),
    .din2(add_ln60_reg_799),
    .ce(1'b1),
    .dout(grp_fu_505_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U19(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_1_load_1_reg_661),
    .din1(grp_fu_513_p1),
    .din2(add_ln60_2_reg_804),
    .ce(1'b1),
    .dout(grp_fu_513_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U20(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(b_1_load_2_reg_721),
    .din1(grp_fu_521_p1),
    .din2(grp_fu_479_p3),
    .ce(1'b1),
    .dout(grp_fu_521_p3)
);

matrixmul_mac_muladd_8s_8s_16s_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16s_16_4_1_U21(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_529_p0),
    .din1(grp_fu_529_p1),
    .din2(mul_ln60_24_fu_446_p2),
    .ce(1'b1),
    .dout(grp_fu_529_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U22(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_535_p0),
    .din1(grp_fu_535_p1),
    .din2(add_ln60_6_reg_816),
    .ce(1'b1),
    .dout(grp_fu_535_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U23(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_542_p0),
    .din1(grp_fu_542_p1),
    .din2(add_ln60_8_reg_821),
    .ce(1'b1),
    .dout(grp_fu_542_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U24(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_548_p0),
    .din1(grp_fu_548_p1),
    .din2(add_ln60_10_reg_853),
    .ce(1'b1),
    .dout(grp_fu_548_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U25(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(tmp_3_reg_749),
    .din1(grp_fu_554_p1),
    .din2(add_ln60_12_reg_858),
    .ce(1'b1),
    .dout(grp_fu_554_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U26(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_560_p0),
    .din1(grp_fu_560_p1),
    .din2(add_ln60_14_reg_863),
    .ce(1'b1),
    .dout(grp_fu_560_p3)
);

matrixmul_mac_muladd_8s_8s_16ns_16_4_1 #(
    .ID( 1 ),
    .NUM_STAGE( 4 ),
    .din0_WIDTH( 8 ),
    .din1_WIDTH( 8 ),
    .din2_WIDTH( 16 ),
    .dout_WIDTH( 16 ))
mac_muladd_8s_8s_16ns_16_4_1_U27(
    .clk(ap_clk),
    .reset(ap_rst),
    .din0(grp_fu_565_p0),
    .din1(grp_fu_565_p1),
    .din2(add_ln60_16_reg_878),
    .ce(1'b1),
    .dout(grp_fu_565_p3)
);

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_CS_fsm <= ap_ST_fsm_pp0_stage0;
    end else begin
        ap_CS_fsm <= ap_NS_fsm;
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter0_reg <= 1'b0;
    end else begin
        if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
            ap_enable_reg_pp0_iter0_reg <= ap_start;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter1 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter1 <= ap_enable_reg_pp0_iter0;
        end
    end
end

always @ (posedge ap_clk) begin
    if (ap_rst == 1'b1) begin
        ap_enable_reg_pp0_iter2 <= 1'b0;
    end else begin
        if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            ap_enable_reg_pp0_iter2 <= 1'b0;
        end else if (((1'b0 == ap_block_pp0_stage4_subdone) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            ap_enable_reg_pp0_iter2 <= ap_enable_reg_pp0_iter1;
        end
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        add_ln60_10_reg_853 <= grp_fu_485_p3;
        add_ln60_12_reg_858 <= grp_fu_491_p3;
        add_ln60_14_reg_863 <= grp_fu_498_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        add_ln60_11_reg_888 <= grp_fu_548_p3;
        add_ln60_13_reg_893 <= grp_fu_554_p3;
        add_ln60_9_reg_883 <= grp_fu_542_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        add_ln60_15_reg_898 <= grp_fu_560_p3;
        add_ln60_17_reg_903 <= grp_fu_565_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        add_ln60_16_reg_878 <= grp_fu_529_p3;
        add_ln60_5_reg_873 <= grp_fu_521_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        add_ln60_2_reg_804 <= grp_fu_457_p3;
        add_ln60_6_reg_816 <= grp_fu_464_p3;
        add_ln60_8_reg_821 <= grp_fu_471_p3;
        add_ln60_reg_799 <= grp_fu_450_p3;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        b_1_load_1_reg_661 <= b_1_q0;
        b_1_load_reg_631 <= b_1_q1;
        tmp_1_reg_693 <= {{a_q0[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        b_1_load_2_reg_721 <= b_1_q0;
        tmp_3_reg_749 <= {{a_q0[15:8]}};
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage3_11001) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        mul_ln60_15_reg_794 <= mul_ln60_15_fu_423_p2;
        sext_ln60_10_reg_782 <= sext_ln60_10_fu_416_p1;
        sext_ln60_3_reg_768 <= sext_ln60_3_fu_410_p1;
        sext_ln60_7_reg_775 <= sext_ln60_7_fu_413_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage1_11001) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        mul_ln60_3_reg_656 <= mul_ln60_3_fu_360_p2;
        mul_ln60_reg_621 <= mul_ln60_fu_322_p2;
        sext_ln60_14_reg_698 <= sext_ln60_14_fu_374_p1;
        sext_ln60_1_reg_615 <= sext_ln60_1_fu_318_p1;
        sext_ln60_4_reg_636 <= sext_ln60_4_fu_348_p1;
        sext_ln60_5_reg_643 <= sext_ln60_5_fu_352_p1;
        sext_ln60_6_reg_650 <= sext_ln60_6_fu_356_p1;
        sext_ln60_8_reg_666 <= sext_ln60_8_fu_366_p1;
        sext_ln60_reg_610 <= sext_ln60_fu_314_p1;
        tmp1_reg_626 <= {{a_q1[15:8]}};
        trunc_ln60_1_reg_688 <= trunc_ln60_1_fu_370_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage2_11001) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        mul_ln60_6_reg_716 <= mul_ln60_6_fu_382_p2;
        mul_ln60_9_reg_739 <= mul_ln60_9_fu_394_p2;
        sext_ln60_11_reg_726 <= sext_ln60_11_fu_387_p1;
        sext_ln60_12_reg_733 <= sext_ln60_12_fu_391_p1;
        sext_ln60_17_reg_754 <= sext_ln60_17_fu_403_p1;
        sext_ln60_9_reg_710 <= sext_ln60_9_fu_378_p1;
        trunc_ln60_2_reg_744 <= trunc_ln60_2_fu_399_p1;
    end
end

always @ (posedge ap_clk) begin
    if (((1'b0 == ap_block_pp0_stage4_11001) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        sext_ln60_15_reg_826 <= sext_ln60_15_fu_430_p1;
        sext_ln60_16_reg_836 <= sext_ln60_16_fu_438_p1;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            a_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            a_address0 = 64'd1;
        end else begin
            a_address0 = 'bx;
        end
    end else begin
        a_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        a_ce0 = 1'b1;
    end else begin
        a_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        a_ce1 = 1'b1;
    end else begin
        a_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_subdone) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        ap_done = 1'b1;
    end else begin
        ap_done = 1'b0;
    end
end

always @ (*) begin
    if ((1'b1 == ap_CS_fsm_pp0_stage0)) begin
        ap_enable_reg_pp0_iter0 = ap_start;
    end else begin
        ap_enable_reg_pp0_iter0 = ap_enable_reg_pp0_iter0_reg;
    end
end

always @ (*) begin
    if (((ap_idle_pp0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0) & (ap_start == 1'b0))) begin
        ap_idle = 1'b1;
    end else begin
        ap_idle = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0 = 1'b1;
    end else begin
        ap_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter1 == 1'b0) & (ap_enable_reg_pp0_iter0 == 1'b0))) begin
        ap_idle_pp0_0to1 = 1'b1;
    end else begin
        ap_idle_pp0_0to1 = 1'b0;
    end
end

always @ (*) begin
    if (((ap_enable_reg_pp0_iter2 == 1'b0) & (ap_enable_reg_pp0_iter1 == 1'b0))) begin
        ap_idle_pp0_1to2 = 1'b1;
    end else begin
        ap_idle_pp0_1to2 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage4_subdone) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        ap_ready = 1'b1;
    end else begin
        ap_ready = 1'b0;
    end
end

always @ (*) begin
    if (((ap_idle_pp0_0to1 == 1'b1) & (ap_start == 1'b0))) begin
        ap_reset_idle_pp0 = 1'b1;
    end else begin
        ap_reset_idle_pp0 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_0_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_0_address0 = 64'd1;
        end else begin
            b_0_address0 = 'bx;
        end
    end else begin
        b_0_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        b_0_ce0 = 1'b1;
    end else begin
        b_0_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_0_ce1 = 1'b1;
    end else begin
        b_0_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_1_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_1_address0 = 64'd1;
        end else begin
            b_1_address0 = 'bx;
        end
    end else begin
        b_1_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        b_1_ce0 = 1'b1;
    end else begin
        b_1_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_1_ce1 = 1'b1;
    end else begin
        b_1_ce1 = 1'b0;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter0 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            b_2_address0 = 64'd2;
        end else if (((1'b0 == ap_block_pp0_stage0) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
            b_2_address0 = 64'd1;
        end else begin
            b_2_address0 = 'bx;
        end
    end else begin
        b_2_address0 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        b_2_ce0 = 1'b1;
    end else begin
        b_2_ce0 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter0 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        b_2_ce1 = 1'b1;
    end else begin
        b_2_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_address0 = 64'd8;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_address0 = 64'd6;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        res_address0 = 64'd4;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        res_address0 = 64'd2;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_address0 = 64'd1;
    end else begin
        res_address0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            res_address1 = 64'd7;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            res_address1 = 64'd5;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            res_address1 = 64'd3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            res_address1 = 64'd0;
        end else begin
            res_address1 = 'bx;
        end
    end else begin
        res_address1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        res_ce0 = 1'b1;
    end else begin
        res_ce0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        res_ce1 = 1'b1;
    end else begin
        res_ce1 = 1'b0;
    end
end

always @ (*) begin
    if (((1'b0 == ap_block_pp0_stage0) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0))) begin
        res_d0 = add_ln60_17_reg_903;
    end else if (((1'b0 == ap_block_pp0_stage4) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
        res_d0 = add_ln60_13_reg_893;
    end else if (((1'b0 == ap_block_pp0_stage3) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
        res_d0 = add_ln60_9_reg_883;
    end else if (((1'b0 == ap_block_pp0_stage2) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
        res_d0 = add_ln60_5_reg_873;
    end else if (((1'b0 == ap_block_pp0_stage1) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
        res_d0 = grp_fu_513_p3;
    end else begin
        res_d0 = 'bx;
    end
end

always @ (*) begin
    if ((ap_enable_reg_pp0_iter1 == 1'b1)) begin
        if (((1'b0 == ap_block_pp0_stage4) & (1'b1 == ap_CS_fsm_pp0_stage4))) begin
            res_d1 = add_ln60_15_reg_898;
        end else if (((1'b0 == ap_block_pp0_stage3) & (1'b1 == ap_CS_fsm_pp0_stage3))) begin
            res_d1 = add_ln60_11_reg_888;
        end else if (((1'b0 == ap_block_pp0_stage2) & (1'b1 == ap_CS_fsm_pp0_stage2))) begin
            res_d1 = grp_fu_535_p3;
        end else if (((1'b0 == ap_block_pp0_stage1) & (1'b1 == ap_CS_fsm_pp0_stage1))) begin
            res_d1 = grp_fu_505_p3;
        end else begin
            res_d1 = 'bx;
        end
    end else begin
        res_d1 = 'bx;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)) | ((1'b0 == ap_block_pp0_stage0_11001) & (ap_enable_reg_pp0_iter2 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage0)))) begin
        res_we0 = 1'b1;
    end else begin
        res_we0 = 1'b0;
    end
end

always @ (*) begin
    if ((((1'b0 == ap_block_pp0_stage4_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage4)) | ((1'b0 == ap_block_pp0_stage3_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage3)) | ((1'b0 == ap_block_pp0_stage2_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage2)) | ((1'b0 == ap_block_pp0_stage1_11001) & (ap_enable_reg_pp0_iter1 == 1'b1) & (1'b1 == ap_CS_fsm_pp0_stage1)))) begin
        res_we1 = 1'b1;
    end else begin
        res_we1 = 1'b0;
    end
end

always @ (*) begin
    case (ap_CS_fsm)
        ap_ST_fsm_pp0_stage0 : begin
            if ((~((ap_idle_pp0_1to2 == 1'b1) & (ap_start == 1'b0)) & (ap_reset_idle_pp0 == 1'b0) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end else if (((ap_reset_idle_pp0 == 1'b1) & (1'b0 == ap_block_pp0_stage0_subdone))) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end
        end
        ap_ST_fsm_pp0_stage1 : begin
            if ((1'b0 == ap_block_pp0_stage1_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage1;
            end
        end
        ap_ST_fsm_pp0_stage2 : begin
            if ((1'b0 == ap_block_pp0_stage2_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage2;
            end
        end
        ap_ST_fsm_pp0_stage3 : begin
            if ((1'b0 == ap_block_pp0_stage3_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage3;
            end
        end
        ap_ST_fsm_pp0_stage4 : begin
            if ((1'b0 == ap_block_pp0_stage4_subdone)) begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage0;
            end else begin
                ap_NS_fsm = ap_ST_fsm_pp0_stage4;
            end
        end
        default : begin
            ap_NS_fsm = 'bx;
        end
    endcase
end

assign a_address1 = 64'd0;

assign ap_CS_fsm_pp0_stage0 = ap_CS_fsm[32'd0];

assign ap_CS_fsm_pp0_stage1 = ap_CS_fsm[32'd1];

assign ap_CS_fsm_pp0_stage2 = ap_CS_fsm[32'd2];

assign ap_CS_fsm_pp0_stage3 = ap_CS_fsm[32'd3];

assign ap_CS_fsm_pp0_stage4 = ap_CS_fsm[32'd4];

assign ap_block_pp0_stage0 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage0_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage1_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage2_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage3_subdone = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_11001 = ~(1'b1 == 1'b1);

assign ap_block_pp0_stage4_subdone = ~(1'b1 == 1'b1);

assign ap_block_state10_pp0_stage4_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state11_pp0_stage0_iter2 = ~(1'b1 == 1'b1);

assign ap_block_state1_pp0_stage0_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state2_pp0_stage1_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state3_pp0_stage2_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state4_pp0_stage3_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state5_pp0_stage4_iter0 = ~(1'b1 == 1'b1);

assign ap_block_state6_pp0_stage0_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state7_pp0_stage1_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state8_pp0_stage2_iter1 = ~(1'b1 == 1'b1);

assign ap_block_state9_pp0_stage3_iter1 = ~(1'b1 == 1'b1);

assign ap_enable_pp0 = (ap_idle_pp0 ^ 1'b1);

assign b_0_address1 = 64'd0;

assign b_1_address1 = 64'd0;

assign b_2_address1 = 64'd0;

assign grp_fu_300_p4 = {{a_q0[23:16]}};

assign grp_fu_450_p0 = sext_ln60_5_fu_352_p1;

assign grp_fu_450_p1 = sext_ln60_4_fu_348_p1;

assign grp_fu_457_p0 = sext_ln60_8_fu_366_p1;

assign grp_fu_457_p1 = sext_ln60_4_fu_348_p1;

assign grp_fu_464_p0 = sext_ln60_14_fu_374_p1;

assign grp_fu_464_p1 = sext_ln60_5_fu_352_p1;

assign grp_fu_471_p0 = sext_ln60_14_fu_374_p1;

assign grp_fu_471_p1 = sext_ln60_8_fu_366_p1;

assign grp_fu_479_p0 = sext_ln60_11_fu_387_p1;

assign grp_fu_479_p1 = sext_ln60_4_reg_636;

assign grp_fu_485_p0 = sext_ln60_14_reg_698;

assign grp_fu_485_p1 = sext_ln60_11_fu_387_p1;

assign grp_fu_491_p0 = sext_ln60_17_fu_403_p1;

assign grp_fu_491_p1 = sext_ln60_5_reg_643;

assign grp_fu_498_p0 = sext_ln60_17_fu_403_p1;

assign grp_fu_498_p1 = sext_ln60_8_reg_666;

assign grp_fu_505_p1 = sext_ln60_2_fu_407_p1;

assign grp_fu_513_p1 = sext_ln60_2_fu_407_p1;

assign grp_fu_521_p1 = sext_ln60_2_fu_407_p1;

assign grp_fu_529_p0 = sext_ln60_17_reg_754;

assign grp_fu_529_p1 = sext_ln60_11_reg_726;

assign grp_fu_535_p0 = sext_ln60_13_fu_427_p1;

assign grp_fu_535_p1 = sext_ln60_3_reg_768;

assign grp_fu_542_p0 = sext_ln60_13_fu_427_p1;

assign grp_fu_542_p1 = sext_ln60_7_reg_775;

assign grp_fu_548_p0 = sext_ln60_13_fu_427_p1;

assign grp_fu_548_p1 = sext_ln60_10_reg_782;

assign grp_fu_554_p1 = sext_ln60_3_reg_768;

assign grp_fu_560_p0 = sext_ln60_16_reg_836;

assign grp_fu_560_p1 = sext_ln60_7_reg_775;

assign grp_fu_565_p0 = sext_ln60_16_reg_836;

assign grp_fu_565_p1 = sext_ln60_10_reg_782;

assign mul_ln60_12_fu_419_p0 = sext_ln60_12_reg_733;

assign mul_ln60_12_fu_419_p1 = sext_ln60_6_reg_650;

assign mul_ln60_15_fu_423_p0 = sext_ln60_12_reg_733;

assign mul_ln60_15_fu_423_p1 = sext_ln60_9_reg_710;

assign mul_ln60_18_fu_433_p0 = sext_ln60_15_fu_430_p1;

assign mul_ln60_18_fu_433_p1 = sext_ln60_1_reg_615;

assign mul_ln60_21_fu_441_p0 = sext_ln60_15_fu_430_p1;

assign mul_ln60_21_fu_441_p1 = sext_ln60_6_reg_650;

assign mul_ln60_24_fu_446_p0 = sext_ln60_15_reg_826;

assign mul_ln60_24_fu_446_p1 = sext_ln60_9_reg_710;

assign mul_ln60_3_fu_360_p1 = sext_ln60_fu_314_p1;

assign mul_ln60_6_fu_382_p1 = sext_ln60_reg_610;

assign mul_ln60_9_fu_394_p1 = sext_ln60_1_reg_615;

assign mul_ln60_fu_322_p1 = sext_ln60_fu_314_p1;

assign sext_ln60_10_fu_416_p1 = b_1_load_2_reg_721;

assign sext_ln60_11_fu_387_p1 = $signed(b_2_q0);

assign sext_ln60_12_fu_391_p1 = trunc_ln60_1_reg_688;

assign sext_ln60_13_fu_427_p1 = $signed(tmp_1_reg_693);

assign sext_ln60_14_fu_374_p1 = $signed(grp_fu_300_p4);

assign sext_ln60_15_fu_430_p1 = $signed(trunc_ln60_2_reg_744);

assign sext_ln60_16_fu_438_p1 = tmp_3_reg_749;

assign sext_ln60_17_fu_403_p1 = $signed(grp_fu_300_p4);

assign sext_ln60_1_fu_318_p1 = $signed(b_0_q1);

assign sext_ln60_2_fu_407_p1 = $signed(tmp1_reg_626);

assign sext_ln60_3_fu_410_p1 = b_1_load_reg_631;

assign sext_ln60_4_fu_348_p1 = $signed(tmp_s_fu_338_p4);

assign sext_ln60_5_fu_352_p1 = $signed(b_2_q1);

assign sext_ln60_6_fu_356_p1 = $signed(b_0_q0);

assign sext_ln60_7_fu_413_p1 = b_1_load_1_reg_661;

assign sext_ln60_8_fu_366_p1 = $signed(b_2_q0);

assign sext_ln60_9_fu_378_p1 = $signed(b_0_q0);

assign sext_ln60_fu_314_p1 = $signed(trunc_ln60_fu_310_p1);

assign tmp_s_fu_338_p4 = {{a_q1[23:16]}};

assign trunc_ln60_1_fu_370_p1 = a_q0[7:0];

assign trunc_ln60_2_fu_399_p1 = a_q0[7:0];

assign trunc_ln60_fu_310_p1 = a_q1[7:0];

endmodule //matrixmul
